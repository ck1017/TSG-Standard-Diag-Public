-- Modem Diagnostic Monitoring Interface API
-- v1.0
-- 11.5.2015

MDMI DEFINITIONS ::=
BEGIN

IMPORTS
    mib-2, DisplayString
        FROM RFC1213-MIB
    IpAddress
        FROM RFC1155-SMI
    OBJECT-TYPE
        FROM RFC-1212
    TRAP-TYPE
        FROM RFC-1215;

-- Here we define the OID of the MIB itself
mdmi OBJECT IDENTIFIER ::= { mib-2 6362 }
-- MODULE-IDENTITY
--  LastUpdated
--      201511050000Z
--  OrgName
--      Verizon Wireless
--  ContactInfo
--      
--
--  Descr
--      MIB module for generic diagnostic applications
--
--  RevDate
--      201511050000Z
--  RevDescr
--      Reverting changes which were added to be compatible with snmp parser.

-- The version of the MIB
mdmi-v1 OBJECT IDENTIFIER ::= { mdmi 1 }

--The MIB is broken into 5 main sections
mdmiConfig  OBJECT IDENTIFIER ::= { mdmi-v1 1 }
mdmiKpis    OBJECT IDENTIFIER ::= { mdmi-v1 2 }
mdmiMessages    OBJECT IDENTIFIER ::= { mdmi-v1 3 }
mdmiCommands    OBJECT IDENTIFIER ::= { mdmi-v1 4 }
mdmiTraps   OBJECT IDENTIFIER ::= { mdmi-v1 5 }

-------------------------------------------------------------------------------
------      DIAG Configuration                                     ------------
-------------------------------------------------------------------------------

deviceName OBJECT-TYPE
    SYNTAX  DisplayString
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Human-readable name of the device"
::= {mdmiConfig 1}

mibVersion OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "The MIB version that the device supports"
::= {mdmiConfig 2}

-------------------------------------------------------------------------------
------      KPIs                                                   ------------
-------------------------------------------------------------------------------

-- This log is generated every 500ms
servingCellMeasurement OBJECT-TYPE
    SYNTAX  ServingCellMeasurement
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Measurements of Serving Cell"
::= {mdmiKpis 1}

    ServingCellMeasurement ::= SEQUENCE {
        pci         INTEGER (0..504),
        rsrp        INTEGER (-180..-30),    -- RSRP Value in dBm    
        rsrp0       INTEGER (-180..-30),    -- RSRP Value for Rx0 in dBm
        rsrp1       INTEGER (-180..-30),    -- RSRP Value for Rx1 in dBm
        rsrq        INTEGER (-30..10),      -- RSRQ Value in dB
        rsrq0       INTEGER (-30..10),      -- RSRQ Value for Rx0 in dB
        rsrq1       INTEGER (-30..10),      -- RSRQ Value for Rx1 in dB
        rssi        INTEGER (-110..-10),    -- RSSI Value in dBm
        rssi0       INTEGER (-110..-10),    -- RSSI Value for Rx0 in dBm
        rssi1       INTEGER (-110..-10),    -- RSSI Value for Rx1 in dBm
        sinr        INTEGER (-20..30),      -- SINR Value in dBm
        sinr0       INTEGER (-20..30),      -- SINR Value for Rx0 in dBm
        sinr1       INTEGER (-20..30),      -- SINR Value for Rx1 in dBm
        earfcn      INTEGER (0..262143),    -- EARFCN
        priority    INTEGER (0..7)          -- The priority of the layer that the cell resides on
    }

-- This log is generated every 500ms
neighborCellMeasurements OBJECT-TYPE
    SYNTAX  NeighborCellMeasurements
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Neighbor Cell Measurements"
::= {mdmiKpis 2}

    NeighborCellMeasurements ::= SEQUENCE OF NeighborCellMeasurement        -- up to 20 detected neighbor cells
    NeighborCellMeasurement ::= SEQUENCE {
        pci         INTEGER (0..504),
        rsrp        INTEGER (-180..-30),    -- RSRP Value in dBm    
        rsrp0       INTEGER (-180..-30),    -- RSRP Value for Rx0 in dBm
        rsrp1       INTEGER (-180..-30),    -- RSRP Value for Rx1 in dBm
        rsrq        INTEGER (-30..10),      -- RSRQ Value in dB
        rsrq0       INTEGER (-30..10),      -- RSRQ Value for Rx0 in dB
        rsrq1       INTEGER (-30..10),      -- RSRQ Value for Rx1 in dB
        rssi        INTEGER (-110..-10),    -- RSSI Value in dBm
        rssi0       INTEGER (-110..-10),    -- RSSI Value for Rx0 in dBm
        rssi1       INTEGER (-110..-10),    -- RSSI Value for Rx1 in dBm
        earfcn      INTEGER (0..262143),    -- EARFCN
        priority    INTEGER (0..7)          -- The priority of the layer that the cell resides on
    }

-- This log is generated every 500ms
puschTxPowerMeasurement OBJECT-TYPE
    SYNTAX  PuschTxPowerReport
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "PUSCH Tx Power measurement"
::= {mdmiKpis 3}

    PuschTxPowerReport ::= SEQUENCE {
        puschTxPowerValue   PuschTxPowerValue,                -- PUSCH tx power
        puschTpc            PuschTpc,                         -- TPC
        fi                  PowerControlAccumalationFactor,   -- Power control accumalation factor
        rbNum               INTEGER (0..110),                 -- Number of allocated resource blocks in PUSCH
        tbSize              INTEGER,                          -- Transport block size in bytes
        modOrder            PuschModulationOrder,             -- Modulation order
        retransmitIndex     INTEGER (1..28)                   -- HARQ retransmission number
    }

    PuschTxPowerValue ::= INTEGER (-112..23)                  -- PUSCH Tx Power measurement in dB

    PuschTpc ::= CHOICE {
        puschTpcValid   INTEGER (-6..8),
        puschTpcNull    NULL
    }

    PowerControlAccumalationFactor ::= INTEGER (-141..141)

    PuschModulationOrder ::= INTEGER {
        BPSK (0),
        QPSK (1),
        QAM16 (2),
        QAM64 (3)
    }

-- This log is generated every 500ms
pucchTxPowerMeasurement OBJECT-TYPE
    SYNTAX  PucchTxPowerReport
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "PUCCH Tx Power measurement"
::= {mdmiKpis 4}

    PucchTxPowerReport ::= SEQUENCE {
        pucchTxPowerValue   PucchTxPowerValue,                -- PUCCH tx power
        pucchTpc            PucchTpc,                         -- TPC
        gi                  PowerControlAccumalationFactor    -- Power control accumalation factor
    }
    PucchTxPowerValue ::= INTEGER (-112..23)    --PUCCH Tx Power measurement in dB
    PucchTpc ::= CHOICE {
        pucchTpcValid   INTEGER (-9..27),
        pucchTpcNull    NULL
    }

-- This log is generated every 500ms
srsTxPowerMeasurement OBJECT-TYPE
    SYNTAX  SrsTxPowerReport
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "SRS Tx Power measurement"
::= {mdmiKpis 5}

    SrsTxPowerReport ::= SEQUENCE {
        srsTxPowerValue     SrsTxPowerValue,                -- SRS tx power
        fi                  PowerControlAccumalationFactor  -- Power control accumalation factor
    }
    SrsTxPowerValue ::= INTEGER (-112..23)  --SRS Tx Power measurement in dB

-- Path Loss
-- This log is generated every 1s
pathLossValue OBJECT-TYPE
    SYNTAX  PathLoss
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Value of DL Path Loss"
::= {mdmiKpis 6}

    PathLoss ::= INTEGER (0..255)

-- CQI
-- This log is generated every 1s
cqiValue OBJECT-TYPE
    SYNTAX  CQI
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Value of CQI"
::= {mdmiKpis 7}

    CQI ::= SEQUENCE {
        rankIndex   INTEGER(0..1),  -- 0: Rank 1  1: Rank 2
        cqiCw0  CqiSubValue,
        cqiCw1  CqiSubValue
    }
    CqiSubValue ::= CHOICE {
        validCqi    INTEGER (0..15),
        nullCqi NULL
    }

-- EMM state and sub-state
-- This log is generated every time the EMM state changes
emmStateValue OBJECT-TYPE
    SYNTAX  EmmStates
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Current EMM State and Substate"
::= {mdmiKpis 8}

    EmmStates ::= SEQUENCE {
        emmState        EmmStateType,
        emmSubstate     EmmSubstateType
    }

    -- EMM State Values
    EmmStateType ::= INTEGER {
        EmmNull (1),
        EmmDeregistered (2),
        EmmRegisteredInitiated (3),
        EmmRegistered (4),
        EmmTrackingAreaUpdatingInitiated (5),
        EmmServiceRequestInitiated (6),
        EmmDeregisteredInitiated (7),
        EmmInvalidState (8)
    }
    
    -- EMM sub-state
    EmmSubstateType ::= INTEGER(1..7)
    
    -- If EMM state is EmmDeregistered(2), EMM sub-state
    -- EmmDeregisteredNoImsi(1)
    -- EmmDeregisteredPlmnSearch(2)
    -- EmmDeregisteredAttachNeeded(3)
    -- EmmDeregisteredNoCellAvailable(4)
    -- EmmDeregisteredAttemptingToAttach(5)
    -- EmmDeregisteredNormalService(6)
    -- EmmDeregisteredLimitedService(7)
    
    -- If EMM state is EmmRegisteredInitiated(3), EMM sub-state
    -- EmmWaitingForNwResponse(1)
    -- EmmWaitingForEsmResponse(2)
    
    -- If EMM state is EmmRegistered(4), EmmTrackingAreaUpdatingInitiated(5) and EmmServiceRequestInitiated(6), EMM sub-state
    -- EmmRegisteredNormalService(1)
    -- EmmRegisteredUpdateNeeded(2)
    -- EmmRegisteredAttemptingToUpdate(3)
    -- EmmRegisteredNoCellAvailable(4)
    -- EmmRegisteredPlmnSearch(5)
    -- EmmRegisteredLimitedService(6)

-- MCC/MNC
-- This log is generated every time the serving cell changes and every time there is a SI update
mccMncValue OBJECT-TYPE
    SYNTAX  MCC-MNC
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Value of MCC and MNC"
::= {mdmiKpis 9}

    MCC-MNC ::= SEQUENCE {
        mcc MCC,
        mnc MNC
    }
    MCC ::= SEQUENCE (SIZE (3)) OF MCC-MNC-Digit
    MNC ::= SEQUENCE (SIZE (2..3)) OF MCC-MNC-Digit
    MCC-MNC-Digit ::= INTEGER (0..9)

-- Cell Identity - from RRC SIB
-- This log is generated every time the serving cell changes and every time there is a SI update
cellIdValue OBJECT-TYPE
    SYNTAX  CellId
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Cell Identity"
::= {mdmiKpis 10}

    CellId ::= INTEGER (0..268435455)

-- Band Indicator
-- This log is generated every time the serving cell changes and every time there is a SI update
bandIndicatorValue OBJECT-TYPE
    SYNTAX  BandIndicator
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Band Indicator"
::= {mdmiKpis 11}

    BandIndicator ::= INTEGER (1..64)

-- Downlink Bandwidth
-- This log is generated every time the serving cell changes and every time there is a SI update
dlBandwidthValue OBJECT-TYPE
    SYNTAX  Bandwidth
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Downlink Bandwidth"
::= {mdmiKpis 12}

    Bandwidth ::= INTEGER {
        Bandwidth-1-4-Mhz (1),  --1.4 MHz
        Bandwidth-3-Mhz (2),    --3 MHz
        Bandwidth-5-Mhz (3),    --5 MHz
        Bandwidth-10-Mhz (4),   --10 MHz
        Bandwidth-15-Mhz (5),   --15 MHz
        Bandwidth-20-Mhz (6)    --20 MHz
    }

-- Uplink Bandwidth
-- This log is generated every time the serving cell changes and every time there is a SI update
ulBandwidthValue OBJECT-TYPE
    SYNTAX  Bandwidth
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Uplink Bandwidth"
::= {mdmiKpis 13}

-- Downlink Frequency
-- This log is generated every time the serving cell changes and every time there is a SI update
dlFrequencyValue OBJECT-TYPE
    SYNTAX  Frequency
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Downlink Frequency as EARFCN"
::= {mdmiKpis 14}

    Frequency ::= INTEGER (0..262143)

-- Uplink Frequency
-- This log is generated every time the serving cell changes and every time there is a SI update
ulFrequencyValue OBJECT-TYPE
    SYNTAX  Frequency
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Uplink Frequency as EARFCN"
::= {mdmiKpis 15}

-- Downlink Transmission Mode from 3GPP 36.213
-- This log is generated every 1s when subscribed
dlTransmissionModeValue OBJECT-TYPE
    SYNTAX  TransmissionMode
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Downlink Transmission Mode"
::= {mdmiKpis 16}

    TransmissionMode ::= INTEGER (1..10)

-- Uplink Transmission Mode from 3GPP 36.213
-- This log is generated every 1s when subscribed
ulTransmissionModeValue OBJECT-TYPE
    SYNTAX  TransmissionMode
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Uplink Transmission Mode"
::= {mdmiKpis 17}

-- This log is generated when there is a cell reselection event
cellReselectionEvent OBJECT-TYPE
    SYNTAX  CellReselectionEventType
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Events relating to Cell Reselection"
::= {mdmiKpis 18}

    CellReselectionEventType ::= CHOICE {
        cellReselectionAttempt  NULL,
        cellReselectionFailure  CellReselectionFailureType
    }

    CellReselectionFailureType ::= INTEGER {
        S-Failure (1),
        Sib-Read-Failure (2),
        Dl-Weak-Ind (3),
        Cell-Barred (4),
        Non-Eq-Plmn (5),
        Forbidden-Ta (6),
        Aborted (7),
        Forbidden-Csg-Id (8),
        Irat-Resel-Failure (9),
        Freq-Barred (10)
    }

-- This log is generated when there is a handover event
handoverEvent OBJECT-TYPE
    SYNTAX  HandoverEventType
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Events relating to Handover"
::= {mdmiKpis 19}

    HandoverEventType ::= SEQUENCE {
        handoverResult      HandoverResult,
        targetCell          TargetCell
    }
    
    TargetCell ::= SEQUENCE {
        earfcn      INTEGER (0..262143),    -- EARFCN
        pci         INTEGER (0..504),       -- Physical Cell ID
        srxlev      INTEGER (-30..50)       -- Srxlev in dB
    }

    HandoverResult ::= CHOICE {
        handoverSuccess NULL,
        handoverFailure HandoverFailureType
    }

    HandoverFailureType ::= INTEGER {
        Other (1),          -- Other reason instead of reason below
        InvalidCfg (2),     -- Validation failure
        Cphy (3),           -- Physical layer failure on the target cell
        Rach (4),           -- T304 expiry due to RACH failure on target cell
        RachMeas (5)        -- T304 expiry due to RACH failure on target cell when MeasConfig IE was included
    }

-- This log is generated when UE detects RLF
radioLinkFailureEvent OBJECT-TYPE
    SYNTAX  RadioLinkFailureEvent
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Event indicating Radio Link Failure"
::= {mdmiKpis 20}

    RadioLinkFailureEvent ::= SEQUENCE {
        rlfCounter      RadioLinkFailureEventCounter,          -- Counter to show how many times UE has detected RLF since UE entered RRC CONNECTED state
        rlfCause        RlfCause                               -- RLF cause
    }

    RadioLinkFailureEventCounter ::= INTEGER (1..255)

    RlfCause ::= INTEGER {
        cfgFailue(0),
        hoFailure(1),
        rachProblem(2),
        maxRetransmission(3),
        ipCheckFailue(4),
        sibReadingFailure(5),
        mibChange(6),
        other(7)
    }

-- This log is generated when there is a RACH attempt
macRachAttemptEvent OBJECT-TYPE
    SYNTAX  MacRachAttemptEventType
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Events relating to MAC RACH Attempt"
::= {mdmiKpis 21}

    MacRachAttemptEventType ::= INTEGER {
        Success (0),                                        -- Success
        Failure-At-Msg-2 (1),                               -- Failure at MSG2
        Failure-At-Msg-4-CT-Timer-Expired (2),              -- Failure at MSG4 due to CT timer expired
        Failure-At-Msg-4-CT-Resolution-Not-Passed (3),      -- Failure at MSG4 due to CT resolution is not passed
        Aborted (4)                                         -- Aborted
    }

-- This log is generated every time the codec is successfully initialized
rtpCodec OBJECT-TYPE
    SYNTAX  RtpCodecValue
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RTP Codec"
::= {mdmiKpis 22}

    RtpCodecValue ::= SEQUENCE {
        id          INTEGER(1..65535),  -- id of rtp stream
        codec       RtpCodecType,       -- Codec
        codecRate   INTEGER(1..11)      -- Codec rate
    }

    RtpCodecType ::= INTEGER {
        AMR (1),
        AMR-WB (2)
    }

-- AMC rates
--      kbps-4-75(1),   4.75 kbps
--      kbps-5-15(2),   5.15 kbps
--      kbps-5-9(3),    5.9 kbps
--      kbps-6-9(5),    6.7 kbps
--      kbps-7-4(6),    7.4 kbps
--      kbps-7-95(7),   7.95 kbps
--      kbps-10-2(8),   10.2 kbps
--      kbps-12-2(9),   12.2 kbps
--      silence(10)     Silence frame
-- AMC-WB rates
--      kbps-6-6(1),    6.6 kbps
--      kbps-8-855(2),  8.855 kbps
--      kbps-12-65(3),  12.65 kbps
--      kbps-14-25(5),  14.25 kbps
--      kbps-15-85(6),  15.85 kbps
--      kbps-18-25(7),  18.25 kbps
--      kbps-19-85(8),  19.85 kbps
--      kbps-23-05(9),  23.05 kbps
--      kbps-23-85(10), 23.85 kbps
--      silence(11)     Silence frame

-- This log is generated at the receiving end of RTP flow when newReceivedSequenceNumber - lastReceivedSequenceNumber > 1
rtpPacketLoss OBJECT-TYPE
    SYNTAX  RtpPacketLossValue
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RTP Packets Lost"
::= {mdmiKpis 23}

    RtpPacketLossValue ::= SEQUENCE {
        id          INTEGER(1..65535),          -- id of RTP stream
        packetsLost INTEGER(1..65535)           -- number of RTP packets lost
    }

rtpOneWayDelay OBJECT-TYPE
    SYNTAX  RtpOneWayDelayValue
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RTP One Way Delay"
::= {mdmiKpis 24}

    RtpOneWayDelayValue ::= SEQUENCE {
        id         INTEGER(1..65535),   -- id of RTP stream
        delay      INTEGER(1..65535)    -- one way delay in ms
    }

rtpJitter OBJECT-TYPE
    SYNTAX  RtpJitterValue
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RTP Jitter"
::= {mdmiKpis 25}

    RtpJitterValue ::= SEQUENCE {
        id         INTEGER(1..65535),   -- id of RTP stream
        jitter     INTEGER(1..65535)    -- jitter in ms
    }

rtpJitterBufferDelay OBJECT-TYPE
    SYNTAX  RtpJitterBufferDelayValue
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RTP Jitter Buffer Delay"
::= {mdmiKpis 26}

    RtpJitterBufferDelayValue ::= SEQUENCE {
        id                  INTEGER(1..65535),        -- id of RTP stream
        jitterBufferDelay   INTEGER(1..65535)         -- jitter buffer delay in ms
    }

macThroughputDL OBJECT-TYPE
-- Downlink throughput measured by the UE during an ftp-download session, on the MAC sub-layer
-- MAC from 3GPP TS 36.321
--http://www.etsi.org/deliver/etsi_ts/136300_136399/136321/12.05.00_60/ts_136321v120500p.pdf
    SYNTAX  ThroughputObject
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Downlink throughput measured by the UE on the MAC sub-layer. Object is time-stamped and geo-referenced."
::= {mdmiKpis 27}

    ThroughputObject ::= SEQUENCE {
        timeStamp   TimeStamp,
        location    LocationResult,
        throughput  Throughput
    }
    -- time stamp (Universal Time Coordinated, UTC) corresponding to throughput measurement
    TimeStamp ::= SEQUENCE {
        year    INTEGER,
        month   INTEGER,
        day INTEGER,
        hour    INTEGER,
        minute  INTEGER,
        second  INTEGER,
        millisecond INTEGER
    }
    -- geographical coordinates of the point corresponding to throughput measurements
    LocationResult ::= CHOICE {
        valid-location  Location,
        location-null   NULL
    }
    Location ::= SEQUENCE {
            -- all values are double (IETF 754)
        latitude    OCTET STRING(SIZE (8)),
        longitude   OCTET STRING(SIZE (8)),
        altitude    OCTET STRING(SIZE (8))
    }
    Throughput ::= INTEGER  --in kbps

macThroughputUL OBJECT-TYPE
-- Uplink throughput measured by the UE during an ftp-download session, on the MAC sub-layer
-- MAC from 3GPP TS 36.321
--http://www.etsi.org/deliver/etsi_ts/136300_136399/136321/12.05.00_60/ts_136321v120500p.pdf
    SYNTAX  ThroughputObject
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Uplink throughput measured by the UE on the MAC sub-layer. Object is time-stamped and geo-referenced."
::= {mdmiKpis 28}

rlcThroughputDL OBJECT-TYPE
-- Downlink throughput measured by the UE during an ftp-download session, on the RLC sub-layer
-- RLC from 3GPP TS 36.322
-- http://www.etsi.org/deliver/etsi_ts/136300_136399/136322/12.02.00_60/ts_136322v120200p.pdf
    SYNTAX  ThroughputObject
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Downlink throughput measured by the UE on the RLC sub-layer. Object is time-stamped and geo-referenced."
::= {mdmiKpis 29}

rlcThroughputUL OBJECT-TYPE
-- Uplink throughput measured by the UE during an ftp-download session, on the RLC sub-layer
-- RLC from 3GPP TS 36.322
-- http://www.etsi.org/deliver/etsi_ts/136300_136399/136322/12.02.00_60/ts_136322v120200p.pdf
    SYNTAX  ThroughputObject
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Uplink throughput measured by the UE on the RLC sub-layer. Object is time-stamped and geo-referenced."
::= {mdmiKpis 30}

pdcpThroughputDL OBJECT-TYPE
-- Downlink throughput measured by the UE during an ftp-download session, on the PDCP sub-layer
-- PDCP from 3GPP TS 36.323
-- http://www.etsi.org/deliver/etsi_ts/136300_136399/136323/12.03.00_60/ts_136323v120300p.pdf
    SYNTAX  ThroughputObject
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Downlink throughput measured by the UE on the PDCP sub-layer. Object is time-stamped and geo-referenced."
::= {mdmiKpis 31}

pdcpThroughputUL OBJECT-TYPE
-- Uplink throughput measured by the UE during an ftp-download session, on the PDCP sub-layer
-- PDCP from 3GPP TS 36.323
-- http://www.etsi.org/deliver/etsi_ts/136300_136399/136323/12.03.00_60/ts_136323v120300p.pdf
    SYNTAX  ThroughputObject
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Uplink throughput measured by the UE on the PDCP sub-layer. Object is time-stamped and geo-referenced."
::= {mdmiKpis 32}

ipThroughputDL OBJECT-TYPE
-- Downlink throughput measured by the UE during an ftp-download session, on the IP sub-layer
-- IP packet payload defined by RFC 791 and RFC 2460
    SYNTAX  ThroughputObject
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Downlink throughput measured by the UE on the IP sub-layer. Object is time-stamped and geo-referenced."
::= {mdmiKpis 33}

ipThroughputUL OBJECT-TYPE
-- Uplink throughput measured by the UE during an ftp-download session, on the IP sub-layer
-- IP packet payload defined by RFC 791 and RFC 2460
    SYNTAX  ThroughputObject
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Uplink throughput measured by the UE on the IP sub-layer. Object is time-stamped and geo-referenced."
::= {mdmiKpis 34}

-- This log is generated every 1s
dlResourceBlocksValue OBJECT-TYPE
    SYNTAX  ResourceBlocks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Number of Downlink Physical Resource Blocks allocated."
::= {mdmiKpis 35}

    ResourceBlocks ::= INTEGER (1..110)

-- This log is generated every 1s
dlMCSValue OBJECT-TYPE
    SYNTAX  MCS
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "MCS signaled by the eNodeB when the UE received PDSCH data."
::= {mdmiKpis 36}

    MCS ::= INTEGER (0..31)

dlPhysLayerThroughputValue OBJECT-TYPE
    SYNTAX  Throughput
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "L1 downlink throughput measured at the HARQ level, excluding the transport blocks received by the UE with CRC errors."
::= {mdmiKpis 37}

-- This log is generated every 1s
mimoRankIndicatorValue OBJECT-TYPE
    SYNTAX  MimoRankIndicator
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Number of Transport Blocks the UE can receive per Transmission Time Interval."
::= {mdmiKpis 38}

    MimoRankIndicator ::= INTEGER

mimoPDSCHthroughput0Value OBJECT-TYPE
    SYNTAX  Throughput
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "PDSCH data rate measured by the UE for the downlink on the code word 0 layer."
::= {mdmiKpis 39}

mimoPDSCHthroughput1Value OBJECT-TYPE
    SYNTAX  Throughput
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "PDSCH data rate measured by the UE for the downlink on the code word 1 layer."
::= {mdmiKpis 40}

-- This log is generated every 1s
ulResourceBlocksValue OBJECT-TYPE
    SYNTAX  ResourceBlocks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Number of Uplink Physical Resource Blocks allocated."
::= {mdmiKpis 41}

ulPhysLayerThroughputValue OBJECT-TYPE
    SYNTAX  Throughput
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "L1 uplink throughput measured at the HARQ level, excluding the transport blocks received by the UE with CRC errors."
::= {mdmiKpis 42}

-- This log is generated every 1s
ulTimingAdvanceValue OBJECT-TYPE
    SYNTAX  TimingAdvance
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Number of TA units signaled by the eNode B to the UE."
::= {mdmiKpis 43}

    TimingAdvance ::= INTEGER   --in TA units microseconds

-- This log is generated every 1s
ulTxPowerHeadroomValue OBJECT-TYPE
    SYNTAX  Headroom
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Total remaining power at the UE before reaching its maximum nominal power."
::= {mdmiKpis 44}

    Headroom ::= CHOICE {
        headroom-value  INTEGER (-23..40),  --headroom value in dB
        headroom-null   NULL    --not included
    }

-- This log is generated every 1s
rachLatency OBJECT-TYPE
    SYNTAX  RachLatency
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RACH Latency"
::= {mdmiKpis 45}

    RachLatency ::= INTEGER                 -- time in ms between 1st preamble and response from NW in DL

-- This log is generated every 1s
ulRACHAccessDelayValue OBJECT-TYPE
    SYNTAX  Delay
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Average time required to reach a successful attempt during the sampling period"
::= {mdmiKpis 46}

    Delay ::= INTEGER            -- in ms

-- This log is generated every 1s
ulMCSValue OBJECT-TYPE
    SYNTAX  MCS
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "MCS signaled by the eNodeB to the UE."
::= {mdmiKpis 47}

-- This log is generated every 1s
ulRACHTxPowerValue OBJECT-TYPE
    SYNTAX  RachTxPower
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "PRACH tx power"
::= {mdmiKpis 48}

    RachTxPower ::= INTEGER (-112..23)     -- PRACH tx power in dB

-- This log is generated when UE transition to a new cell
newCellEvent OBJECT-TYPE
    SYNTAX  NewCellEventType
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "This Event is logged when UE transition to a new cell"
::= {mdmiKpis 49}

    NewCellEventType ::= SEQUENCE {
        cause   NewCellCause,
        campedStatus    NewCellStatus
    }
    NewCellCause ::= INTEGER {
        cellSelection (1),
        cellReselection (2),
        handover (3),
        redirection (4)
    }
    NewCellStatus   ::= INTEGER {
        suitable (1),
        acceptable (2)
    }

-- This log is generated when there is a RACH attempt
macRachAttemptReason OBJECT-TYPE
    SYNTAX  MacRachAttemptReasonType
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "This Event gives the reason for a RACH attempt."
::= {mdmiKpis 50}

    MacRachAttemptReasonType ::= INTEGER {
        Connection-Request (1),
        Radio-Link-Failure (2),
        UL-Data-Arrival (3),
        DL-Data-Arrival (4),
        Handover (5)
    }

-- This log is generated every 500ms
pdschDecodingResult OBJECT-TYPE
    SYNTAX  PdschDecodingResult
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Parameters related to PDSCH decoding results"
::= {mdmiKpis 51}

    PdschDecodingResult ::= SEQUENCE {
        transportBlockCrc       CrcResult,            -- CRC check result of the traspot block during the HARQ process in PDSCH channel
        retransmissionNumber    INTEGER(1..8),        -- PDSCH HARQ process retransmition number values from first, …, eighth.
        codeBlockSizePlus       INTEGER(0..6168)      -- maximum code block size
    }
    
    CrcResult ::= INTEGER {
        Fail (0),
        Pass (1)
    }

-- The log is generated every time a PDSCH needs to be demodulated
pdschDemodulationConfig OBJECT-TYPE
    SYNTAX  PdschDemodulationConfig
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "parameters related to serving cell demodulation config"
::= {mdmiKpis 52}

    PdschDemodulationConfig ::= SEQUENCE {
        modulationStream0   ModulationScheme,   -- Modulation type
        modulationStream1   ModulationScheme    -- Modulation type
    }

    ModulationScheme ::= INTEGER {
        QPSK (0),
        QAM16 (1),
        QAM64 (2),
        QAM256 (3)
    }

-- This log is generated every 500ms
pdschTransportBlock OBJECT-TYPE
    SYNTAX  PdschTransportBlock
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "parameters related to PDSCH transport blocks"
::= {mdmiKpis 53}

    PdschTransportBlock ::= SEQUENCE {
        harqId      INTEGER(0..14), -- Harq ID 36.213 section 7. Up to 8 for FDD (0-7), up to 15 for TDD (0-14).
        crcResult   CrcResult,      -- CRC check result of the traspot block during the HARQ process in PDSCH channel
        tbSize      INTEGER         -- Transport block size in bytes
    }
    
    
-- This log is generated every time the serving cell changes and every time there is a SI update.
trackingAreaCode OBJECT-TYPE
    SYNTAX  TrackingAreaCode
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Tracking area code"
::= {mdmiKpis 54}

    TrackingAreaCode ::= INTEGER(0..65535)      -- the unique code that each operator assigns to each of their Tracking Areas (TAs)


-- This log record is generated when the ESM context state changes.
esmContextInfo OBJECT-TYPE
    SYNTAX  EsmContextInfo
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Information about the ESM context state"
::= {mdmiKpis 55}

    EsmContextInfo ::= SEQUENCE {
        contextType     ContextType,
        bearerId        INTEGER,        -- ID of the bearer context
        bearerState     BearerState,    -- Bearer State
        radioBearerId   INTEGER,        -- Radio bearer ID corresponding to EPS Bearer ID of the context
        qci             INTEGER         -- QoS Class Identifier (TS 23.203)
    }

    ContextType ::= INTEGER {
        default (0),
        dedicated (1)
    }
    
    BearerState ::= INTEGER {
        inactive (0),
        activePending (1),
        active (2),
        modify (3)
    }

-- This log is generated every 500ms
phichDecodingOutcome OBJECT-TYPE
    SYNTAX  PhichDecodingOutcome
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "PHICH decoding outcome"
::= {mdmiKpis 56}
    
    PhichDecodingOutcome ::= INTEGER {
        nak(0),
        ack(1)
    }
    

-- This log is generated every time there is RRC state change
rrcStateChangeEvent OBJECT-TYPE
    SYNTAX  RrcStateChangeEvent
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RRC state change event"
::= {mdmiKpis 57}
    
    RrcStateChangeEvent ::= SEQUENCE {
        rrcState                RrcState,               -- RRC state
        rrcStateChangeCause     RrcStateChangeCause     -- Trigger for RRC state change
    }
    
    RrcState ::= INTEGER {
        inactive(0),
        idleNotCamped(1),
        idleCamped(2),
        connecting(3),
        connected(4),
        suspended(5),
        iratToLteStarted(6),
        closing(7)
    }
    
    RrcStateChangeCause ::= INTEGER {
        toInactive (0),                     -- Generic cause for all state transitions to inactive state
        campedAbortedByNas (1),             -- Camped due to connection aborted from upper layers
        campedT300Expiry (2),               -- Camped due to T300expiry
        campedConnectionReject (3),         -- Camped due to connection rejected from eNB
        campedCellReselectionFailure (4),   -- Camped due to cell reselection
        campedBarred (5),                   -- Camped due to access barring
        campedOtherRrcFailue (6),           -- Camped due to other reasons
        connectingEmergencyCall (7),        -- Enter connecting due to emergency call
        connectingHighPriAccess (8),        -- Enter connecting due to high priority access
        connectingReceiveCall (9),          -- Enter connecting due to receiving call
        connectingMakingCall (10),          -- Enter connecting due to making call
        connectingMoData (11),              -- Enter connecting due to originating a data session
        connectingEmbms (12),               -- Enter connecting due to eMBMS
        connectingCa (13),                  -- Enter connecting due to Carrier Aggregation
        connectingVolteCall (14),           -- Enter connecting due to VoLTE call
        connectedHoFailure (15),            -- Camped on a cell in connected state due to handover failure
        connectedOther (16),                -- Camped on a cell in connected state due to other reasons
        closingT311Expriry (17),            -- Enter closing due to T311 expiry
        closingT301Expriry (18),            -- Enter closing due to T301 expiry
        closingReject (19)                  -- Enter closing due to RRC connection reestablishment reject
    }


-- This log is generated when a EMM timer expired.
nasEmmTimerExpiryEvent OBJECT-TYPE
    SYNTAX  NasEmmTimerExpiryEvent
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "NAS EMM timer exspiry event"
::= {mdmiKpis 58}
    
    NasEmmTimerExpiryEvent ::= INTEGER {
        t3410(1)
    }
    
    
-- This log is generated every time a rrc timer expires.
rrcTimerExpiryEvent OBJECT-TYPE
    SYNTAX  RrcTimerExpiryEvent
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RRC timer expiry event"
::= {mdmiKpis 59}
    
    RrcTimerExpiryEvent ::= INTEGER {
        t300(1),
        t301(2),
        t302(3),
        t303(4),
        t304(5),
        t305(6),
        t311(7),
        t320(8),
        t321(9),
        other(10)
    }
    
    
-- This log is generated every time there is a MAC timer expires
macTimerExpiryEvent OBJECT-TYPE
    SYNTAX  MacTimerExpiryEvent
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "MAC timer expiry event"
::= {mdmiKpis 60}
    
    MacTimerExpiryEvent ::= INTEGER {
        taTimer(1),             -- TA Timer
        raTimer(2),             -- RA Timer
        contentionTimer(3),     -- Contention Timer
        rachBackOffTimer(4)     -- RACH BackOFF Timer
    }
    
    
-- This log is generated every time there is a NAS ESM timer expires
nasEsmExpiryEvent OBJECT-TYPE
    SYNTAX  NasEsmExpiryEvent
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "NAS ESM expiry event"
::= {mdmiKpis 61}
    
    NasEsmExpiryEvent ::= INTEGER {
        t3480(1),
        t3482(2),
        t3481(3),
        t3492(4)
    }
    

-- This log is generated every 500ms
macDlTransportBlock OBJECT-TYPE
    SYNTAX  MacDlTransportBlock
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "MAC DL Transport block"
::= {mdmiKpis 62}

    MacDlTransportBlock ::= INTEGER     -- Total transport block size assigned to the UE for data reception on the DL
    

-- This log is generated every 500ms
macUlGrant OBJECT-TYPE
    SYNTAX  MacUlGrant
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "MAC UL grant"
::= {mdmiKpis 63}

    MacUlGrant ::= INTEGER      -- Uplink grant size in bytes
    
    
-- This log is generated every 500ms
pdcpDlStats OBJECT-TYPE
    SYNTAX  PdcpDlStats
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "PDCP DL statistics"
::= {mdmiKpis 64}

    PdcpDlStats ::= SEQUENCE OF PdcpDlRb        -- PdcpDlStats consists a list of PdcpDlRb for different radio bearers
    
    PdcpDlRb ::= SEQUENCE {
        cfgIndex            INTEGER(0..34),     -- Unique radio bearer configuration index
        rxDataPduBytes      INTEGER,            -- Total number of PDCP Data PDU received in bytes
        rxControlPduBytes   INTEGER,            -- Total number of PDCP Control PDU received in bytes
        pduRohcFail         INTEGER,            -- Total number of PDCP PDUs ROHC decompression failed
        pduIntegrityFail    INTEGER,            -- Total number of PDCP PDUs integrity check failed
        missSduToUl         INTEGER,            -- Total number of PDCP SDUs missing when delivered to upper layers
        missSduFromLl       INTEGER,            -- Total number of PDCP SDUs missing from RLC since reestablishment
        pduDupsBytes        INTEGER,            -- Total number of PDCP PDUs duplicated in bytes
        pduOutOfWindowBytes INTEGER,            -- Total number of PDCP PDUs out of window in bytes
        pduInvalidBytes     INTEGER             -- Total number of PDCP PDUs invalid in bytes
    }
    
    
-- This log is generated every 500ms 
pdcpUlStats OBJECT-TYPE
    SYNTAX  PdcpUlStats
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "PDCP UL statistics"
::= {mdmiKpis 65}

    PdcpUlStats ::= SEQUENCE OF PdcpUlRb            -- PdcpUlStats consists a list of PdcpUlRb for different radio bearers
    
    PdcpUlRb ::= SEQUENCE {
        cfgIndex                INTEGER(0..34),     -- Unique radio bearer configuration index
        txDataPduBytes          INTEGER,            -- Total number of PDCP Data PDU transmitted in bytes
        txControlPduBytes       INTEGER,            -- Total number of PDCP Control PDU transmitted in bytes
        pduRohcFail             INTEGER,            -- Total number of PDCP PDUs ROHC compression failed
        sduDiscardBytes         INTEGER,            -- Total number of PDCP SDUs discarded in bytes
        pduRetransmittedBytes   INTEGER             -- Total number of PDCP PDUs retransmitted in bytes
    }
    
-- This log is generated every 500ms   
rlcDlStats OBJECT-TYPE
    SYNTAX  RlcDlStats
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RLC DL statistics"
::= {mdmiKpis 66}
    
    RlcDlStats ::= SEQUENCE OF RlcDlRb              -- RlcDlStats consists a list of RlcDlRb for different radio bearers
    
    RlcDlRb ::= SEQUENCE {
        cfgIndex                INTEGER(0..34),     -- Unique radio bearer configuration index
        rxDataPduBytes          INTEGER,            -- Total number of RLC Data PDU received in bytes
        rxControlPduBytes       INTEGER,            -- Total number of RLC Control PDU received in bytes
        pduInvalidBytes         INTEGER,            -- Total number of RLC PDUs invalid in bytes
        pduRetransmittedBytes   INTEGER,            -- Total number of RLC PDUs retransmitted in bytes from receiver perspective
        pduDupsBytes            INTEGER,            -- Total number of RLC PDUs duplicated in bytes
        pduDroppedBytes         INTEGER,            -- Total number of PDUs dropped in bytes excluding duplicated
        sduOutOrder             INTEGER             -- Total number of out of order SDUs forwarded to PDCP during RLC reestablishment
    }
    

-- This log is generated every 500ms
rlcUlStats OBJECT-TYPE
    SYNTAX  RlcUlStats
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RLC UL statistics"
::= {mdmiKpis 67}
    
    RlcUlStats ::= SEQUENCE OF RlcUlRb              -- RlcUlStats consists a list of RlcUlRb for different radio bearers
    
    RlcUlRb ::= SEQUENCE {
        cfgIndex                INTEGER(0..34),     -- Unique radio bearer configuration index
        txDataPduBytes          INTEGER,            -- Total number of New Data PDU transmitted in bytes including RLC headers
        txControlPduBytes       INTEGER,            -- Total number of RLC Control PDU transmitted in bytes
        pduRetransmittedBytes   INTEGER             -- Total number of RLC PDUs retransmitted in bytes
    }
    
    
-- This log is generated whenever the call is connected or disconnected
volteCallEvent OBJECT-TYPE
    SYNTAX  VolteCallEvent
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "VoLTE cal event"
::= {mdmiKpis 68}

    VolteCallEvent ::= SEQUENCE {
        callStatus      CallStatus,
        callType        CallType
    }
    
    CallStatus ::= INTEGER {
        inactive (0),
        active (1)
    }
    
    CallType ::= INTEGER {
        emergency (0),
        voice (1),
        video (2)
    }
    
    
-- This log is generated whenever there is a change in the RAT.
ratEvent OBJECT-TYPE
    SYNTAX  RatInfo
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RAT event"
::= {mdmiKpis 69}

    RatInfo ::= INTEGER {
        gsm (1),
        umts (2),
        lte (3),
        cdma (4)
    }
    
    
-- This log is generated when there are MIB and SIBs to read
mibSibReadEvent OBJECT-TYPE
    SYNTAX  MibSibReadEvent
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "MIB and SIB read event"
::= {mdmiKpis 70}

    MibSibReadEvent ::= CHOICE {
        readSuccess         MibSibContent,     -- read MIB and SIB content successfully
        readFail            NULL               -- fail to read
    }
    
    MibSibContent ::= SEQUENCE {
        mibContent      MibContent,                         -- MIB content
        sibContent      OCTET STRING(SIZE (1..8192))        -- RRC OTA message which contains sibs content
    }
    
    MibContent ::= SEQUENCE {
        pci         INTEGER (0..504),           -- pci
        freq        INTEGER (0..262143),        -- EARFCN
        antennas    INTEGER,                    -- Number of Tx antennas detected
        bandwidth   Bandwidth                   -- Downlink bandwidth
    }
    
    
    
-- This log is generated every 500ms
pssResult OBJECT-TYPE
    SYNTAX  PssResult
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "parameters related to PSS"
::= {mdmiKpis 71}
    
    PssResult ::= SEQUENCE {
        peakValue       INTEGER,            -- PSS peak value in dB
        peakPosition    INTEGER (0..9599),  -- Sample position with 5ms resolution
        index           INTEGER (0..2)      -- PSS index
    }
    
    
    
-- This log is generated every 500ms
sssResult OBJECT-TYPE
    SYNTAX  SssResult
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "parameters related to SSS"
::= {mdmiKpis 72}

    SssResult ::= SEQUENCE OF SssCellInfo
    SssCellInfo ::= SEQUENCE {
        pci             INTEGER (0..504),
        peakValue       INTEGER,                -- SSS peak value in dB
        frameBoundary   INTEGER,                -- Frame boundary RTC counter
        cp              CyclicPrefix            -- Cyclic prefix used
    }
    
    CyclicPrefix ::= INTEGER {                  -- Cyclic prefix used
        normal (0),
        extended (1)
    }

 
-- This log is generated when there is a RACH attempt
rachMsgReport OBJECT-TYPE
    SYNTAX  RachMsgReport
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RACH MSG 1 2 3 4 info"
::= {mdmiKpis 73}

    RachMsgReport ::= SEQUENCE {
        msg1    CHOICE {
            msg1Null        NULL,               -- unavailable
            msg1Content     Msg1Content
        },
        msg2    CHOICE {
            msg2Null        NULL,               -- unavailable
            msg2Content     Msg2Content
        },
        msg3    CHOICE {
            msg3Null        NULL,               -- unavailable
            msg3Content     Msg3Content
        },
        msg4    CHOICE {
            msg4Null        NULL,               -- unavailable
            msg4Content     Msg4Content
        }
    }
    
    Msg1Content ::= SEQUENCE {
        sequence        INTEGER (0..63),        -- Preamble sequence index
        prachTxPower    INTEGER (-112..23),     -- PRACH tx power
        duplexMode      INTEGER (0..1)          -- 0: FDD   1: TDD
    }
    
    Msg2Content ::= SEQUENCE {
        timingAdvance           CHOICE {
            timingAdvanceNull   NULL,
            timingAdvanceValue  INTEGER             -- in TA units microseconds
        },
        procedureType           INTEGER (0..1),     -- 0: Contention Free   1: Contention Based
        rntiType                RntiType,           -- RNTI type
        rntiValue               INTEGER             -- RNTI Value
    }
    
    RntiType ::= INTEGER {
        cRnti (0),              -- C-RNTI
        spsRnti (1),            -- SPS-RNTI
        pRnti (2),              -- P-RNTI
        raRnti (3),             -- RA-RNTI
        tempCRnti (4),          -- TEMP-C-RNTI
        siRnti (5),             -- SI-RNTI
        tpcPuschRnti (6),       -- TPC-PUSCH-RNTI
        tpcPucchRnti (7),       -- TPC-PUCCH-RNTI
        mbmsRnti (8)            -- MBMS-RNTI
    }
    
    Msg3Content ::= SEQUENCE {
        mcs                 INTEGER,            -- Modulation and Coding Scheme
        modulationType      ModulationType,   -- Modulation stream type
        startRb             INTEGER (1..110),   -- Starting resource block number of the received grant
        numRb               INTEGER (1..110),   -- Total number of Resource blocks allocated in the grant
        tbSizeIndex         INTEGER (0..26)     -- Transport block size index
    }

    ModulationType ::= INTEGER {
        BPSK (0),
        QPSK (1),
        QAM16 (2),
        QAM64 (3)
    }
    
    Msg4Content ::= SEQUENCE {
        contentionResult    INTEGER {           -- Contention result
            failed (0),
            passed (1)
        }
    }
    
    
-- This log is generated every 500ms
pdcchDecodingResult OBJECT-TYPE
    SYNTAX  PdcchDecodingResult
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "PDCCH decoding result"
::= {mdmiKpis 74}
    
    PdcchDecodingResult ::= SEQUENCE {
        dciFormat           DciFormat,              -- DCI Format
        status              DciFormatStatus         -- DCI Format decoding status
    }

    DciFormat ::= INTEGER {
        format0 (0),
        format1 (1),
        format1A (2),
        format1B (3),
        format1C (4),
        format1D (5),
        format2 (6),
        format2A (7),
        format3 (8),
        format3A (9)
    }

    DciFormatStatus ::= INTEGER {
        dci0Success (1),
        dci0Error (2),
        dciOtherSuccess (3),
        dciOtherError (4)
    }


-- This log is generated every 1s
srPeriod OBJECT-TYPE
    SYNTAX  SrPeriod
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Scheduling Request Period"
::= {mdmiKpis 75}

    SrPeriod ::= INTEGER        -- Scheduling Request Period in ms

-- This log is generated every 1s
frameDelay OBJECT-TYPE
    SYNTAX  FrameDelay
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Frame delay in dejitter buffer"
::= {mdmiKpis 76}

    FrameDelay ::= INTEGER        -- Frame delay in dejitter buffer in unit ms

-------------------------------------------------------------------------------
------      Messages                                               ------------
-------------------------------------------------------------------------------

-- Some common fields
    Version3gpp ::= SEQUENCE {
        majorVersion    INTEGER (8..11),
        minorVersion    INTEGER (0..9)
    }

    OtaMessageDirection ::= INTEGER {
        upstream (1),
        downstream (2)
    }

-- RRC OTA Message from 3GPP 36.331
rrc-OTA-Message OBJECT-TYPE
    SYNTAX  RrcMessageReport
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RRC OTA Message - most recent."
::= {mdmiMessages 1}

    RrcMessageReport ::= SEQUENCE {
        rrc-version Version3gpp,
        pdu-type    RrcPduType,
        rrcPayload  OCTET STRING(SIZE (1..8192))
    }
    -- PDU Types for RRC messages (must be known to decode payload)
    RrcPduType ::= INTEGER {
        pcch (1),
        dlCcch (2),
        dlDcch (3),
        ulCcch (4),
        ulDcch (5),
        mcch (6),
        bcchDlSch (7)
    }

-- NAS Messages from 3GPP 24.301
nas-OTA-Message OBJECT-TYPE
    SYNTAX  NasMessageReport
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "NAS OTA Message - most recent."
::= {mdmiMessages 2}

    NasMessageReport ::= SEQUENCE {
        nas-version Version3gpp,
        direction   OtaMessageDirection,
        type    NasMessageType,
        ciphered    BOOLEAN,
        nasPayload  OCTET STRING(SIZE (1..8192))
    }
    NasMessageType ::= INTEGER {
        esm (1),
        emm (2)
    }

-- IP Packets, payload defined by RFC 791 and RFC 2460
-- Note: IPv6 jumbograms (size > 65536) not supported
ip-OTA-Packet OBJECT-TYPE
    SYNTAX  IpPacketReport
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "IP OTA Packet - most recent."
::= {mdmiMessages 3}

    IpPacketReport ::= SEQUENCE {
        ip-version  IpVersion,
        direction   OtaMessageDirection,
        ipPayload   OCTET STRING(SIZE (1..65536))
    }
    IpVersion ::= INTEGER {
        ipv4 (1),
        ipv6 (2)
    }

-- MAC Messages (transport block) from 3GPP 36.321
mac-OTA-Message OBJECT-TYPE
    SYNTAX  MacMessageReport
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "MAC OTA Message - most recent."
::= {mdmiMessages 4}

    MacMessageReport ::= SEQUENCE {
        mac-version Version3gpp,
        direction   OtaMessageDirection,
        transportChannel TransportChannel,
            -- SFN?
            -- RNTI Type?
            -- HARQ ID?
        macPayload  OCTET STRING(SIZE (1..8192))
    }
    TransportChannel ::= INTEGER {
        bch (1),
        dl-sch (2),
        pch (3),
        mch (4),
        ul-sch (5),
        rach (6)
    }

-- PDCP Messages from 3GPP 36.323
pdcp-OTA-Message OBJECT-TYPE
    SYNTAX  PdcpMessageReport
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "PDCP OTA Message - most recent."
::= {mdmiMessages 5}

    PdcpMessageReport ::= SEQUENCE {
        pdcp-version    Version3gpp,
        direction   OtaMessageDirection,
        type    PdcpMessageType,
        radioBearerType RadioBearerType,
        rlcMode RlcMode,
        pdcpSnSize PdcpSnSize,
            -- ciphered?
            -- Radio Bearer?
            -- SFN?
        pdcpPayload OCTET STRING(SIZE (1..8192))
    }
    PdcpMessageType ::= INTEGER {
        data (1),
        control (2)
    }
    RadioBearerType ::= INTEGER {
        drb (1),
        srb (2)
    }
    RlcMode ::= INTEGER {
        rlc-am (1),
        rlc-um (2)
    }
    PdcpSnSize ::= INTEGER {
        null (0),
        len7bits (1),
        len12bits (2),
        len15bits (3)
    }

-- RLC Messages from 3GPP 36.322
rlc-OTA-Message OBJECT-TYPE
    SYNTAX  RlcMessageReport
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RLC OTA Message - most recent."
::= {mdmiMessages 6}

    RlcMessageReport ::= SEQUENCE {
        rlc-version Version3gpp,
        direction   OtaMessageDirection,
        type    RlcMessageType,
        rlcMode RlcMode,
        snFieldLength SnFieldLength,
        lIField BOOLEAN,
            -- Radio Bearer?
            -- AM/UM?
        rlcPayload  OCTET STRING(SIZE (1..8192))
    }
    RlcMessageType ::= INTEGER {
        data (1),
        control (2)
    }
    SnFieldLength ::= INTEGER {
        size5 (1),
        size10 (2)
    }

-- SIP Messages from RFC 3261
sip-OTA-Message OBJECT-TYPE
    SYNTAX  SipMessageReport
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "SIP OTA Message - most recent."
::= {mdmiMessages 7}

    SipMessageReport ::= SEQUENCE {
        direction   OtaMessageDirection,
        sipPayload  OCTET STRING(SIZE (1..8192))
    }

-- RTP Messages from RFC 3550
rtp-OTA-Message OBJECT-TYPE
    SYNTAX  RtpMessageReport
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "RTP OTA Message - most recent."
::= {mdmiMessages 8}

    RtpMessageReport ::= SEQUENCE {
        direction   OtaMessageDirection,
        rtpPayload  OCTET STRING(SIZE (1..8192))
    }


--------------------------
-- Other message types --
--------------------------

-- IP contained - SIP, RTP
mdmiCommandActions OBJECT IDENTIFIER ::= { mdmiCommands 1 }
mdmiCommandResults OBJECT IDENTIFIER ::= { mdmiCommands 2 }

-------------------------------------------------------------------------------
------      Actions & Results                                      ------------
-------------------------------------------------------------------------------

-- Make a call
make-call OBJECT-TYPE
    SYNTAX  PhoneNumber
    ACCESS  write-only
    STATUS  mandatory
    DESCRIPTION
    "Set this field to make a call."
::= {mdmiCommandActions 1}

    --Digits of phone number to call
    PhoneNumber ::= SEQUENCE (SIZE (1..15)) OF INTEGER (0..9)

make-call-result OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Check this to see if the last make-call command succeeded."
::= {mdmiCommandResults 1}

-- Request a fix
request-location-fix OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  write-only
    STATUS  mandatory
    DESCRIPTION
    "Set this field to true to request a location fix."
::= {mdmiCommandActions 2}

request-location-fix-result OBJECT-TYPE
    SYNTAX  LocationResult2D
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Location retrieved during last location fix request."
::= {mdmiCommandResults 2}

    LocationResult2D ::= CHOICE {
        valid-location  Location2D,
        location-null   NULL
    }
    Location2D ::= SEQUENCE {
        latitude    OCTET STRING(SIZE (8)), -- Latitude value as double (IETF 754)
        longitude   OCTET STRING(SIZE (8))  -- Longitude value as double (IETF 754)
    }

-- Set an ftp session up
setupFtpSession OBJECT-TYPE
    SYNTAX  FtpSession
    ACCESS  write-only
    STATUS  mandatory
    DESCRIPTION
    "Setup an ftp session to a remote server."
::= {mdmiCommandActions 3}

    FtpSession ::= SEQUENCE {
        address IpAddress,
        port    INTEGER(1..5),
        login   OCTET STRING(0..255),
        password    OCTET STRING(0..255),
        account OCTET STRING(0..255)
    }

-- ftp session setup result
ftp-session-setup-result OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Check this to see if the last ftp session setup command succeeded."
::= {mdmiCommandResults 3}

-- Start downloading a file
downloadFile OBJECT-TYPE
    SYNTAX  DownloadFile
    ACCESS  write-only
    STATUS  mandatory
    DESCRIPTION
    "UE downloads a file from an ftp server."
::= {mdmiCommandActions 4}

    DownloadFile ::= SEQUENCE {
            -- fully qualified name of the target file resident in the server
        target  OCTET STRING(1..255),
            -- fully-qualified name of the downloaded file in the UE
        downloaded  OCTET STRING(1..255)
    }

-- Start uploading a file
uploadFile OBJECT-TYPE
    SYNTAX  UploadFile
    ACCESS  write-only
    STATUS  mandatory
    DESCRIPTION
    "UE uploads a file to an ftp server."
::= {mdmiCommandActions 5}

    UploadFile ::= SEQUENCE {
            -- fully qualified name of the target file resident in the UE
        target  OCTET STRING(1..255),
            -- fully-qualified name of the uploaded file in the server
        uploaded    OCTET STRING(1..255)
    }

-- Close an ftp session
closeFtpSession OBJECT-TYPE
    SYNTAX  CloseFtpSession
    ACCESS  write-only
    STATUS  mandatory
    DESCRIPTION
    "Close an ftp session to a remote server."
::= {mdmiCommandActions 6}

    CloseFtpSession ::= SEQUENCE {
        address IpAddress,  -- ftp server address
        port    INTEGER
    }

-- ftp session closing result
ftp-session-closing-result OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    "Check this to see of the last ftp session closing command succeeded."
::= {mdmiCommandResults 4}

-------------------------------------------------------------------------------
------      Traps or Subscriptions                                 ------------
------                                                             ------------
------      includes a flag as to whether it will be issued,       ------------
------      as well as the trap itself                             ------------
-------------------------------------------------------------------------------

mdmiKpiTraps OBJECT IDENTIFIER ::= { mdmiTraps 1 }
mdmiMessageTraps OBJECT IDENTIFIER ::= { mdmiTraps 2 }
mdmiCommandResultTraps OBJECT IDENTIFIER ::= { mdmiTraps 3 }

servingCellMeasurementTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Serving Cell Measurement Traps."
::= {mdmiKpiTraps 1}

-- Subscribe to Serving Cell Measurement diagnostic information
servingCellMeasurementTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { servingCellMeasurement }
    DESCRIPTION
    "Sent every 500 ms (when relevant) with current Serving Measurement values."
::= 1001

neighborCellMeasurementTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Neighbor Cell Measurement Traps."
::= {mdmiKpiTraps 2}

-- Subscribe to Neighbor Cell Measurement diagnostic information
neighborCellMeasurementTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { neighborCellMeasurements }
    DESCRIPTION
    "Sent every 500 ms (when relevant) with current Neighbor Cell Measurement values."
::= 1002

puschTxPowerMeasurementTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to puschTxPower Measurement Traps."
::= {mdmiKpiTraps 3}

-- Subscribe to PUSCH Tx Power Measurement diagnostic information
puschTxPowerMeasurementTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { puschTxPowerMeasurement }
    DESCRIPTION
    "Sent every 500 ms (when relevant) with current PUSCH Tx Power values."
::= 1003

pucchTxPowerMeasurementTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to pucchTxPower Measurement Traps."
::= {mdmiKpiTraps 4}

-- Subscribe to PUCCH Tx Power Measurement diagnostic information
pucchTxPowerMeasurementTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { pucchTxPowerMeasurement }
    DESCRIPTION
    "Sent every 500 ms (when relevant) with current PUCCH Tx Power values"
::= 1004

srsTxPowerMeasurementTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to srsTxPower Measurement Traps"
::= {mdmiKpiTraps 5}

-- Subscribe to SRS Tx Power Measurement diagnostic information
srsTxPowerMeasurementTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { srsTxPowerMeasurement }
    DESCRIPTION
    "Sent every 500 ms (when relevant) with current SRS Tx Power values"
::= 1005

pathLossTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to pathLoss Measurement Traps"
::= {mdmiKpiTraps 6}

-- Subscribe to pathLoss diagnostic information
pathLossTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { pathLossValue }
    DESCRIPTION
    "Sent every 1 s (when relevant) with current pathLoss values"
::= 1006

cqiTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to cqi Traps"
::= {mdmiKpiTraps 7}

-- Subscribe to cqi diagnostic information
cqiTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { cqiValue }
    DESCRIPTION
    "Sent every 1 s (when relevant) with current cqi values"
::= 1007

emmStateTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to emmState Traps"
::= {mdmiKpiTraps 8}

-- Subscribe to emmState diagnostic information
emmStateTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { emmStateValue }
    DESCRIPTION
    "Sent when EMM state changes"
::= 1008

mccMncTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to mccMnc Traps"
::= {mdmiKpiTraps 9}

-- Subscribe to mccMnc diagnostic information
mccMncTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { mccMncValue }
    DESCRIPTION
    "Sent when mccMnc value changes"
::= 1009

cellIdTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to cellId Traps"
::= {mdmiKpiTraps 10}

-- Subscribe to cellId diagnostic information
cellIdTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { cellIdValue }
    DESCRIPTION
    "Sent when cellId value changes"
::= 1010

bandIndicatorTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to bandIndicator Traps"
::= {mdmiKpiTraps 11}

-- Subscribe to bandIndicator diagnostic information
bandIndicatorTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { bandIndicatorValue }
    DESCRIPTION
    "Sent when bandIndicator value changes"
::= 1011

dlBandwidthTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to dlBandwidth Traps"
::= {mdmiKpiTraps 12}

-- Subscribe to dlBandwidth diagnostic information
dlBandwidthTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { dlBandwidthValue }
    DESCRIPTION
    "Sent when dlBandwidth value changes"
::= 1012

ulBandwidthTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to ulBandwidth Traps"
::= {mdmiKpiTraps 13}

-- Subscribe to ulBandwidth diagnostic information
ulBandwidthTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ulBandwidthValue }
    DESCRIPTION
    "Sent when ulBandwidth value changes"
::= 1013

dlFrequencyTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to dlFrequency Traps"
::= {mdmiKpiTraps 14}

-- Subscribe to dlFrequency diagnostic information
dlFrequencyTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { dlFrequencyValue }
    DESCRIPTION
    "Sent when dlFrequency value changes"
::= 1014

ulFrequencyTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to ulFrequency Traps"
::= {mdmiKpiTraps 15}

-- Subscribe to ulFrequency diagnostic information
ulFrequencyTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ulFrequencyValue }
    DESCRIPTION
    "Sent when ulFrequency value changes"
::= 1015

dlTransmissionModeTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to dlTransmissionMode Traps"
::= {mdmiKpiTraps 16}

-- Subscribe to dlTransmissionMode diagnostic information
dlTransmissionModeTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { dlTransmissionModeValue }
    DESCRIPTION
    "Sent when dlTransmissionMode value changes"
::= 1016

ulTransmissionModeTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to ulTransmissionMode Traps"
::= {mdmiKpiTraps 17}

-- Subscribe to ulTransmissionMode diagnostic information
ulTransmissionModeTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ulTransmissionModeValue }
    DESCRIPTION
    "Sent when ulTransmissionMode value changes"
::= 1017

cellReselectionEventTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to cell reselection event Traps"
::= {mdmiKpiTraps 18}

-- Subscribe to cell reselection event diagnostic information
cellReselectionEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { cellReselectionEvent }
    DESCRIPTION
    "Sent to indicate a cell reselection event"
::= 1018

handoverEventTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to handover event Traps"
::= {mdmiKpiTraps 19}

-- Subscribe to handoverEvent diagnostic information
handoverEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { handoverEvent }
    DESCRIPTION
    "Sent to indicate a handover event"
::= 1019

radioLinkFailureTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to radio link failure Traps"
::= {mdmiKpiTraps 20}

-- Subscribe to radioLinkFailure diagnostic information
radioLinkFailureTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { radioLinkFailureEvent }
    DESCRIPTION
    "Sent to indicate radio link failure"
::= 1020

macRachAttemptEventEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to MAC RACH attempt event Traps"
::= {mdmiKpiTraps 21}

-- Subscribe to MAC RACH attempt event diagnostic information
macRachAttemptEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { macRachAttemptEvent }
    DESCRIPTION
    "Sent to indicate MAC RACH attempt event"
::= 1021

rtpCodecEventEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RTP Codec Traps"
::= {mdmiKpiTraps 22}

-- Subscribe to RTP Codec event diagnostic information
rtpCodecEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rtpCodec }
    DESCRIPTION
    "Sent every time the codec is successfully initialized"
::= 1022

rtpPacketLossEventEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RTP Packet Loss event Traps"
::= {mdmiKpiTraps 23}

-- Subscribe to RTP Packet Loss event diagnostic information
rtpPacketLossEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rtpPacketLoss }
    DESCRIPTION
    "Sent when newReceivedSequenceNumber - lastReceivedSequenceNumber > 1"
::= 1023

rtpOneWayDelayEventEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RTP One Way Delay event Traps"
::= {mdmiKpiTraps 24}

-- Subscribe to RTP One Way Delay event diagnostic information
rtpOneWayDelayEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rtpOneWayDelay }
    DESCRIPTION
    "Sent every 1 s"
::= 1024

rtpJitterEventEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RTP Jitter event Traps"
::= {mdmiKpiTraps 25}

-- Subscribe to RTP Jitter event diagnostic information
rtpJitterEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rtpJitter }
    DESCRIPTION
    "Sent every 1 s"
::= 1025

rtpJitterBufferDelayEventEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RTP Jitter Buffer Delay event Traps"
::= {mdmiKpiTraps 26}

-- Subscribe to RTP Jitter Buffer Delay event diagnostic information
rtpJitterBufferDelayEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rtpJitterBufferDelay }
    DESCRIPTION
    "Sent every 1 s"
::= 1026

macDLThroughputTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Downlink MAC Throughput Traps"
::= {mdmiKpiTraps 27}

-- Subscribe to MAC Downlink Throughput events
macDLThroughputTrap TRAP-TYPE
    ENTERPRISE  mdmi-v1
    VARIABLES   { macThroughputDL }
    DESCRIPTION
    "Sent every 1 s with current throughput"
::= 1027

macULThroughputTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Uplink MAC Throughput Traps"
::= {mdmiKpiTraps 28}

-- Subscribe to MAC Uplink Throughput events
macULThroughputTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { macThroughputUL }
    DESCRIPTION
    "Sent every 1 s with current throughput"
::= 1028

rlcDLThroughputTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Downlink RLC Throughput Traps"
::= {mdmiKpiTraps 29}

-- Subscribe to RLC Downlink Throughput events
rlcDLThroughputTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rlcThroughputDL }
    DESCRIPTION
    "Sent every 1 s with current throughput"
::= 1029

rlcULThroughputTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Uplink RLC Throughput Traps"
::= {mdmiKpiTraps 30}

-- Subscribe to RLC Downlink Throughput events
rlcULThroughputTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rlcThroughputUL }
    DESCRIPTION
    "Sent every 1 s with current throughput"
::= 1030

pdcpDLThroughputTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Downlink PDCP Throughput Traps"
::= {mdmiKpiTraps 31}

-- Subscribe to PDCP Downlink Throughput events
pdcpDLThroughputTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { pdcpThroughputDL }
    DESCRIPTION
    "Sent every 1 s with current throughput"
::= 1031

pdcpULThroughputTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Uplink PDCP Throughput Traps"
::= {mdmiKpiTraps 32}

-- Subscribe to PDCP Uplink Throughput events
pdcpULThroughputTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { pdcpThroughputUL }
    DESCRIPTION
    "Sent every 1 s with current throughput"
::= 1032

ipDLThroughputTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Downlink IP Throughput Traps"
::= {mdmiKpiTraps 33}

-- Subscribe to IP Downlink Throughput events
ipDLThroughputTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ipThroughputDL }
    DESCRIPTION
    "Sent every 1 s with current throughput"
::= 1033

ipULThroughputTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Uplink IP Throughput Traps"
::= {mdmiKpiTraps 34}

-- Subscribe to IP Uplink Throughput events
ipULThroughputTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ipThroughputUL }
    DESCRIPTION
    "Sent every 1 s with current throughput"
::= 1034

dlResourceBlocksTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Download Resource Blocks Traps"
::= {mdmiKpiTraps 35}

-- Subscribe to Download Resource Blocks diagnostic information
dlResourceBlocksTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { dlResourceBlocksValue }
    DESCRIPTION
    "Sent every 1 s with DL Resource Blocks value"
::= 1035

dlMCSTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Download MCS Traps"
::= {mdmiKpiTraps 36}

-- Subscribe to Download MCS diagnostic information
dlMCSTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { dlMCSValue }
    DESCRIPTION
    "Sent every 1 s with DL MCS value"
::= 1036

dlPhysLayerThroughputTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Download Physical Layer Throughput Traps"
::= {mdmiKpiTraps 37}

-- Subscribe to Download Physical Layer Throughput information
dlPhysLayerThroughputTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { dlPhysLayerThroughputValue }
    DESCRIPTION
    "Sent every 1 s with current throughput"
::= 1037

mimoRankIndicatorTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to MIMO Rank Indicator Traps"
::= {mdmiKpiTraps 38}

-- Subscribe to MIMO Rank Indicator diagnostic information
mimoRankIndicatorTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { mimoRankIndicatorValue }
    DESCRIPTION
    "Sent every 1 s with Rank Indicator value"
::= 1038

mimoPDSCHthroughput0TrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to MIMO PDSCH Throughput 0 Traps"
::= {mdmiKpiTraps 39}

-- Subscribe to MIMO PDSCH Throughput 0 diagnostic information
mimoPDSCHthroughput0Trap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { mimoPDSCHthroughput0Value }
    DESCRIPTION
    "Sent every 1 s with current throughput"
::= 1039

mimoPDSCHthroughput1TrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to MIMO PDSCH Throughput 1 Traps"
::= {mdmiKpiTraps 40}

-- Subscribe to MIMO PDSCH Throughput 1 diagnostic information
mimoPDSCHthroughput1Trap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { mimoPDSCHthroughput1Value }
    DESCRIPTION
    "Sent every 1 s with current throughput"
::= 1040

ulResourceBlocksTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Upload Resource Blocks Traps"
::= {mdmiKpiTraps 41}

-- Subscribe to Upload Resource Blocks diagnostic information
ulResourceBlocksTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ulResourceBlocksValue }
    DESCRIPTION
    "Sent every 1 s with UL Resource Blocks value"
::= 1041

ulPhysLayerThroughputTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Upload Physical Layer Throughput Traps"
::= {mdmiKpiTraps 42}

-- Subscribe to Upload Physical Layer Throughput diagnostic information
ulPhysLayerThroughputTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ulPhysLayerThroughputValue }
    DESCRIPTION
    "Sent every 1 s with UL Physical Layer Throughput"
::= 1042

ulTimingAdvanceTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Upload Timing Advance Traps"
::= {mdmiKpiTraps 43}

-- Subscribe to Upload Timing Advance diagnostic information
ulTimingAdvanceTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ulTimingAdvanceValue }
    DESCRIPTION
    "Sent every 1 s with UL Timing Advance"
::= 1043

ulTxPowerHeadroomTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Upload Tx Power Headroom Traps"
::= {mdmiKpiTraps 44}

-- Subscribe to Upload Tx Power Headroom diagnostic information
ulTxPowerHeadroomTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ulTxPowerHeadroomValue }
    DESCRIPTION
    "Sent every 1 s with UL Tx Power Headroom"
::= 1044

rachLatencyTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Upload RACH Latency Traps"
::= {mdmiKpiTraps 45}

-- Subscribe to Upload RACH latency diagnostic information
rachLatencyTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rachLatency }
    DESCRIPTION
    "Sent every 1 s with RACH Latency"
::= 1045

ulRACHAccessDelayTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Upload RACH ACCESS Delay Traps"
::= {mdmiKpiTraps 46}

-- Subscribe to Upload RACH ACCESS Delay diagnostic information
ulRACHAccessDelayTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ulRACHAccessDelayValue }
    DESCRIPTION
    "Sent every 1 s with UL RACH ACCESS Delay"
::= 1046

ulMCSTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Upload MCS Traps"
::= {mdmiKpiTraps 47}

-- Subscribe to Upload MCS diagnostic information
ulMCSTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ulMCSValue }
    DESCRIPTION
    "Sent every 1 s with UL MCS value"
::= 1047

ulRACHTxPowerTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Upload RACH Tx Power Traps"
::= {mdmiKpiTraps 48}

-- Subscribe to Upload RACH Tx Power diagnostic information
ulRACHTxPowerTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ulRACHTxPowerValue }
    DESCRIPTION
    "Sent every 1 s with UL RACH Tx Power"
::= 1048

newCellEventTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to new cell event Traps"
::= {mdmiKpiTraps 49}

-- Subscribe to new cell event
newCellEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { newCellEvent }
    DESCRIPTION
    "Sent when there is a new cell event"
::= 1049

macRachAttemptReasonTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RACH attempt reason Traps"
::= {mdmiKpiTraps 50}

-- Subscribe to RACH attempt reason
macRachAttemptReasonTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { macRachAttemptReason }
    DESCRIPTION
    "Sent when there is a RACH attempt"
::= 1050

pdschDecodingResultTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to PDSCH decoding result Traps."
::= {mdmiKpiTraps 51}

pdschDecodingResultTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { pdschDecodingResult }
    DESCRIPTION
    "Sent every 500 ms with PDSCH decoding result info"
::= 1051

pdschDemodulationConfigTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to PDSCH demodulation config Traps."
::= {mdmiKpiTraps 52}

pdschDemodulationConfigTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { pdschDemodulationConfig }
    DESCRIPTION
    "Sent every time a PDSCH needs to be demodulated with PDSCH demodulation config info"
::= 1052

pdschTransportBlockTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to PDSCH transport block Traps."
::= {mdmiKpiTraps 53}

pdschTransportBlockTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { pdschTransportBlock }
    DESCRIPTION
    "Sent every 500 ms with PDSCH transport block info"
::= 1053

trackingAreaCodeTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to tracking area code Traps."
::= {mdmiKpiTraps 54}

trackingAreaCodeTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { trackingAreaCode }
    DESCRIPTION
    "Sent every time the serving cell changes and every time there is a SI update"
::= 1054

esmContextInfoTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to ESM context info Traps."
::= {mdmiKpiTraps 55}

esmContextInfoTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { esmContextInfo }
    DESCRIPTION
    "Sent when the ESM context state changes"
::= 1055

phichDecodingOutcomeTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to PHICH decoding outcome Traps."
::= {mdmiKpiTraps 56}

phichDecodingOutcomeTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { phichDecodingOutcome }
    DESCRIPTION
    "Sent every 500 ms"
::= 1056

rrcStateChangeEventTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RRC state change event Traps."
::= {mdmiKpiTraps 57}

rrcStateChangeEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rrcStateChangeEvent }
    DESCRIPTION
    "Sent every time there is RRC state change"
::= 1057

nasEmmTimerExpiryEventTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to NAS EMM timer expiry event Traps."
::= {mdmiKpiTraps 58}

nasEmmTimerExpiryEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { nasEmmTimerExpiryEvent }
    DESCRIPTION
    "Sent when a EMM timer expired"
::= 1058

rrcTimerExpiryEventTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RRC timer expiry event Traps."
::= {mdmiKpiTraps 59}

rrcTimerExpiryEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rrcTimerExpiryEvent }
    DESCRIPTION
    "Sent every time a RRC timer expires"
::= 1059

macTimerExpiryEventEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to MAC timer expiry event Traps."
::= {mdmiKpiTraps 60}

macTimerExpiryEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { macTimerExpiryEvent }
    DESCRIPTION
    "Sent every time there is a MAC timer expires"
::= 1060

nasEsmExpiryEventEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to NAS ESM expiry event Traps."
::= {mdmiKpiTraps 61}

nasEsmExpiryEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { nasEsmExpiryEvent }
    DESCRIPTION
    "Sent every time there is a NAS ESM timer expires"
::= 1061

macDlTransportBlockTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to MAC DL transport block Traps."
::= {mdmiKpiTraps 62}

macDlTransportBlockTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { macDlTransportBlock }
    DESCRIPTION
    "Sent every 500 ms"
::= 1062

macUlGrantTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to MAC UL grant Traps."
::= {mdmiKpiTraps 63}

macUlGrantTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { macUlGrant }
    DESCRIPTION
    "Sent every 500 ms"
::= 1063

pdcpDlStatsTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to PDCP DL statistics Traps."
::= {mdmiKpiTraps 64}

pdcpDlStatsTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { pdcpDlStats }
    DESCRIPTION
    "Sent every 500 ms"
::= 1064

pdcpUlStatsTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to PDCP UL statistics Traps."
::= {mdmiKpiTraps 65}

pdcpUlStatsTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { pdcpUlStats }
    DESCRIPTION
    "Sent every 500 ms"
::= 1065

rlcDlStatsTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RLC DL statistics Traps."
::= {mdmiKpiTraps 66}

rlcDlStatsTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rlcDlStats }
    DESCRIPTION
    "Sent every 500 ms"
::= 1066

rlcUlStatsTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RLC UL statistics Traps."
::= {mdmiKpiTraps 67}

rlcUlStatsTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rlcUlStats }
    DESCRIPTION
    "Sent every 500 ms"
::= 1067

volteCallEventTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to VoLTE call event Traps."
::= {mdmiKpiTraps 68}

volteCallEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { volteCallEvent }
    DESCRIPTION
    "Sent whenever the call is connected or disconnected"
::= 1068

ratEventTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RAT event Traps."
::= {mdmiKpiTraps 69}

ratEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ratEvent }
    DESCRIPTION
    "Sent every time there is a change in RAT"
::= 1069

mibSibReadEventTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to MIB and SIB read event Traps."
::= {mdmiKpiTraps 70}

mibSibReadEventTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { mibSibReadEvent }
    DESCRIPTION
    "Sent when there are MIB and SIBs to read"
::= 1070

pssResultTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to PSS Traps."
::= {mdmiKpiTraps 71}

pssResultTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { pssResult }
    DESCRIPTION
    "Sent every 500 ms"
::= 1071

sssResultTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to SSS Traps."
::= {mdmiKpiTraps 72}

sssResultTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { sssResult }
    DESCRIPTION
    "Sent every 500 ms"
::= 1072

rachMsgReportTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RACH MSG report Traps."
::= {mdmiKpiTraps 73}

rachMsgReportTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rachMsgReport }
    DESCRIPTION
    "Sent when there is a RACH attempt"
::= 1073

pdcchDecodingResultTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to PDCCH decoding result Traps."
::= {mdmiKpiTraps 74}

pdcchDecodingResultTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { pdcchDecodingResult }
    DESCRIPTION
    "Sent every 500 ms"
::= 1074

srPeriodTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to SR period Traps."
::= {mdmiKpiTraps 75}

srPeriodTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { srPeriod }
    DESCRIPTION
    "Sent every 1 s"
::= 1075

frameDelayTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to frame delay Traps."
::= {mdmiKpiTraps 76}

frameDelayTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { frameDelay }
    DESCRIPTION
    "Sent every 1 s"
::= 1076

-- Subscribe to RRC OTA Messages
rrcTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RRC OTA Traps"
::= {mdmiMessageTraps 1}

-- Subscribe to RRC OTA messages
rrcTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rrc-OTA-Message }
    DESCRIPTION
    "Sent every time an RRC message is sent or received"
::= 2001

-- Subscribe to NAS OTA Messages
nasTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to NAS OTA Traps"
::= {mdmiMessageTraps 2}

-- Subscribe to NAS OTA messages
nasTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { nas-OTA-Message }
    DESCRIPTION
    "Sent every time a NAS message is sent or received"
::= 2002

-- Subscribe to IP OTA Packets
ipTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to IP OTA Traps"
::= {mdmiMessageTraps 3}

-- Subscribe to IP OTA packets
ipTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ip-OTA-Packet }
    DESCRIPTION
    "Sent every time an IP packet is sent or received"
::= 2003

-- Subscribe to MAC OTA Messages
macTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to MAC OTA Traps"
::= {mdmiMessageTraps 4}

-- Subscribe to MAC OTA messages
macTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { mac-OTA-Message }
    DESCRIPTION
    "Sent every time a MAC message is sent or received"
::= 2004

-- Subscribe to PDCP OTA Messages
pdcpTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to PDCP OTA Traps"
::= {mdmiMessageTraps 5}

-- Subscribe to PDCP OTA messages
pdcpTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { pdcp-OTA-Message }
    DESCRIPTION
    "Sent every time a PDCP message is sent or received"
::= 2005

-- Subscribe to RLC OTA Messages
rlcTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RLC OTA Traps"
::= {mdmiMessageTraps 6}

-- Subscribe to RLC OTA messages
rlcTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rlc-OTA-Message }
    DESCRIPTION
    "Sent every time a RLC message is sent or received"
::= 2006

-- Subscribe to SIP OTA Messages
sipTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to SIP OTA Traps"
::= {mdmiMessageTraps 7}

-- Subscribe to SIP OTA messages
sipTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { sip-OTA-Message }
    DESCRIPTION
    "Sent every time a sip message is sent or received"
::= 2007

-- Subscribe to RTP OTA Messages
rtpTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to RTP OTA Traps"
::= {mdmiMessageTraps 8}

-- Subscribe to RTP OTA messages
rtpTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { rtp-OTA-Message }
    DESCRIPTION
    "Sent every time a rtp message is sent or received"
::= 2008

make-call-resultTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to Make Call Results"
::= {mdmiCommandResultTraps 1}

-- Subscribe to results for Make Call command
make-call-resultTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { make-call-result }
    DESCRIPTION
    "Trap for Make Call Results"
::= 3001

request-location-fix-resultTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to location fix Results"
::= {mdmiCommandResultTraps 2}

-- Subscribe to results for Location Fix command
request-location-fix-resultTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { request-location-fix-result }
    DESCRIPTION
    "Trap for location fix Results"
::= 3002

setup-ftp-session-resultTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to receive results from setting an ftp session up"
::= {mdmiCommandResultTraps 3}

-- Subscribe to results for Setup of ftp Session
setup-ftp-session-resultTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ftp-session-setup-result }
    DESCRIPTION
    "Trap for results of ftp session Setup"
::= 3003

close-ftp-session-resultTrapEnabled OBJECT-TYPE
    SYNTAX  BOOLEAN
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
    "Subscribe to receive results from closing an ftp session down"
::= {mdmiCommandResultTraps 4}

-- Subscribe to results for Closing the ftp Session
close-ftp-session-resultTrap TRAP-TYPE
    ENTERPRISE mdmi-v1
    VARIABLES { ftp-session-closing-result }
    DESCRIPTION
    "Trap for results of ftp session closing command"
::= 3004

END

